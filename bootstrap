#!/bin/sh

#
# Installation bootstrap script.
#
# Arguments:
#
#    runtime-dir
#    optional path defining top-of-release
#
# The top-of-release path will be set to the output of /bin/pwd;
# it may be specified if (due to automounters, for instance) /bin/pwd
# returns an unacceptable form of the path.
#

fail () {
    echo $1 1>&2
    exit 1
}

wrap_perl () {
    src=$1
    dst=$2
    cat > $dst <<EOF
#!/bin/sh
export KB_TOP=$top_dir
export KB_RUNTIME=$rt_dir
export KB_PERL_PATH=$perl_lib
$rt_dir/bin/perl $top_dir/$src "\$@"
EOF
    chmod +x $dst
}

wrap_sh () {
    src=$1
    dst=$2
    cat > $dst <<EOF
#!/bin/sh
export KB_TOP=$top_dir
export KB_RUNTIME=$rt_dir
export KB_PERL_PATH=$perl_lib
bash $top_dir/$src "\$@"
EOF
    chmod +x $dst
}

if [ $# -lt 1 ] ; then
    if [ ! -L runtime ] ; then
	fail "Usage: $0 runtime-dir [top-dir]"
    fi
    rt_dir=`readlink runtime`
    top_dir=`pwd`
else
    rt_dir=$1
    top_dir=$2
fi


if [ "$top_dir" = "" ] ; then
    top_dir=`pwd`
fi

if [ ! -d $rt_dir ] ; then
    fail "Runtime directory $rt_dir does not exist"
fi

if [ ! -x $rt_dir/bin/perl ] ; then
    fail "Runtime directory $rt_dir does not contain an executable perl"
fi

if [ -d $top_dir/runtime ] ; then
    t=`readlink $top_dir/runtime`
    if [ "$t" != "$rt_dir" ] ; then
	fail "Runtime already configured; remove $top_dir/runtime if you wish to re-bootstrap."
    fi
fi

if [ ! -h $top_dir/runtime ] ; then
    ln -s $rt_dir $top_dir/runtime
fi

#
# Construct perl module list and the toplevel bootstrap.cfg
#

perl_lib=""
modlist=""
modlistc=""
for moddir in modules/* ; do
    p=$top_dir/$moddir/lib
    if [ -d $p ] ; then
	if [ "$perl_lib" = "" ] ; then perl_lib=$p ; else perl_lib="$perl_lib:$p" ; fi
	modname=`basename $moddir`
	if [ "$modlist" = "" ] ; then modlist=$modname ; else modlist="$modlist $modname" ; fi
	if [ "$modlistc" = "" ] ; then modlistc=$modname ; else modlistc="$modlistc, $modname" ; fi
    fi
done


dcfg=$top_dir/bootstrap.cfg
cat > $dcfg <<END
target = /kb/deployment
deploy-runtime = $rt_dir

deploy-service = $modlistc
deploy-client =

END

for mod in $modlist ; do
    md=modules/$mod
    if [ -f "$md/deploy.cfg" ] ; then
    	cat $md/deploy.cfg >> $dcfg
    else
	echo "[$mod]" >> $dcfg
    fi
    echo "" >> $dcfg
done

for script in tools/*.pl ; do
    if [ -f $script ] ; then
	base=`basename $script .pl`
	wrap_perl $script tools/$base
    fi
done

for script in tools/*.sh ; do
    if [ -f $script ] ; then
	base=`basename $script .sh`
	wrap_sh $script tools/$base
    fi
done


cat > $top_dir/user-env.sh <<EOF
#!/bin/sh
export KB_TOP=$top_dir
export KB_RUNTIME=$rt_dir
export KB_PERL_PATH=$perl_lib
export PATH=\$KB_RUNTIME/bin:\$KB_TOP/bin:\$PATH
export PERL5LIB=\$KB_PERL_PATH
EOF

